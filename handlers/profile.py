from aiogram import Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import models.db
from models.db import get_user_info, get_section_by_user_id


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ñ–∏–ª–µ
def create_profile_keyboard(user_info, sections):
    keyboard = InlineKeyboardMarkup(row_width=2)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ–∫—Ü–∏–∏
    for section in sections:
        keyboard.add(InlineKeyboardButton(text=section, callback_data=f"section_info_{section}"))

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    keyboard.add(InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å—Ç–∞—Ç—É—Å–µ", callback_data="status_info"))

    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile
async def show_profile(message: types.Message):
    user_id = message.from_user.id
    user_info = get_user_info(user_id)
    sections = get_section_by_user_id(user_id)

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    profile_message = f"üë§ –ü—Ä–æ—Ñ–∏–ª—å: {user_info['name']}\n" \
                      f"üìå –°—Ç–∞—Ç—É—Å: {user_info['status']}"

    keyboard = create_profile_keyboard(user_info, sections)
    await message.answer(profile_message, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –¥–∞–Ω–Ω—ã—Ö
async def handle_section_info(callback_query: types.CallbackQuery):
    section = callback_query.data[len("section_info_"):]
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–∫—Ü–∏–∏
    await callback_query.message.answer(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–∫—Ü–∏–∏ {section}")

async def handle_status_info(callback_query: types.CallbackQuery):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ
    status = models.db.get_work_status_by_user_id(callback_query.from_user.id)
    await callback_query.message.answer(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º \n{status}")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers(dp: Dispatcher):
    dp.register_message_handler(show_profile, commands=['profile'])
    dp.register_callback_query_handler(handle_section_info, lambda c: c.data.startswith("section_info_"))
    dp.register_callback_query_handler(handle_status_info, lambda c: c.data == "status_info")
